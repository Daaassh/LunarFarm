     <dependency>
          <groupId>com.comphenix.protocol</groupId>
          <artifactId>ProtocolLib</artifactId>
          <version>5.1.0</version>
          <scope>provided</scope>
      </dependency>
      
      <repository>
          <id>dmulloy2-repo</id>
          <url>https://repo.dmulloy2.net/repository/public/</url>
      </repository>
BlockALine.setAnimation(AnimationType.CIRCLE, hologram);

Hologram.builder(plugin, loc)                                                  // initialize the builder
    .addTextLine("Hello")                                                      // add a text line
    .addTextLine("%%player%%")                                                 // add another text line
    .addClickableTextLine("Click me", 0.5f, 5f)                                 // add a clickable text line
    .addBlockLine(new ItemStack(Material.GOLD_BLOCK))                           // add a block line
    .addBlockLine(new ItemStack(Material.DIAMOND_BLOCK), AnimationType.CIRCLE)  // add a block line with animation
    .placeholders(placeholders)                                                // add placeholders
    .loadAndBuild(pool);
    
hologram.show(player);

Animation:
// create new line structure (armorstand)
Line line = new Line(plugin);
// compose an TextLine hologram
TextLine textLine = new TextLine(line, "Hi %%player%%", placeholders);

// create new line structure (armorstand)
Line line2 = new Line(plugin);
// compose this second BlockLine hologram
BlockLine BlockLine = new BlockLine(line2, new ItemStack(Material.GOLD_BLOCK));
// compose this second BlockAnimatedLine hologram
BlockALine BlockALine = new BlockALine(BlockLine, new StandardAnimatedLine(line2));

// append to hologram that will make all the hard work for you
// the TextBlockStandardLoader loader will load lines(text or block) one below the other.
Hologram hologram = new Hologram(plugin, loc, new TextBlockStandardLoader());
// remember to call this method or hologram will not be visible
hologram.load(textLine, BlockALine);

// show to player
hologram.show(player);

// start animation
BlockALine.setAnimation(AnimationType.CIRCLE, hologram);

// hide after 30 seconds to player
Bukkit.getScheduler().runTaskLater(plugin, () -> hologram.hide(player), 20L * 30);


depend: [ProtocolLib]
